<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moment.admin.dao.AdminVOMapper" >
  <resultMap id="BaseResultMap" type="com.moment.admin.domain.AdminVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phonum" property="phonum" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, phonum, email, password, time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.moment.admin.domain.AdminVOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.moment.admin.domain.AdminVOExample" >
    delete from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.moment.admin.domain.AdminVO" useGeneratedKeys="true" keyProperty="id" >
    insert into admin (id, name, phonum, 
      email, password, time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phonum,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.moment.admin.domain.AdminVO" useGeneratedKeys="true" keyProperty="id" >
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phonum != null" >
        phonum,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonum != null" >
        #{phonum,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.moment.admin.domain.AdminVOExample" resultType="java.lang.Integer" >
    select count(*) from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update admin
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phonum != null" >
        phonum = #{record.phonum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update admin
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phonum = #{record.phonum,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.moment.admin.domain.AdminVO" >
    update admin
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonum != null" >
        phonum = #{phonum,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.moment.admin.domain.AdminVO" >
    update admin
    set name = #{name,jdbcType=VARCHAR},
      phonum = #{phonum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectuseradmin" parameterType="com.moment.user.domain.UserVO" resultType="com.moment.user.domain.UserVO">
  SELECT * from user where score!=2
  <if test="account!=null">
  and account= #{account,jdbcType=INTEGER}
  </if>
  </select>
  <!-- 查询假删除用户 -->
   <select id="selectfakedeleteuser"  resultType="com.moment.user.domain.UserVO">
  SELECT * from user where score=2
  </select>
  <delete id="deleteuserList" parameterType="Integer[]">
   delete from user
    where id in
    	<foreach collection="array" item="arr" index="no" open="("
			separator="," close=")">
			#{arr}
		</foreach>
  </delete>
  <update id="fakedeleteuserList" parameterType="Integer[]">
    update user
    set score=2
    where id in
    	<foreach collection="array" item="arr" index="no" open="("
			separator="," close=")">
			#{arr}
		</foreach>
  </update>
  <!-- 还原用户 -->
   <update id="allowuser" parameterType="Integer">
    update user
    set score=0
    where id=#{id,jdbcType=INTEGER}
  </update>
  
   <resultMap id="EXUserResultMap" type="com.moment.pic.domain.PicEX" >
   <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="ispublic" property="ispublic" jdbcType="VARCHAR" />
    <result column="picpath" property="picpath" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="piclike" property="piclike" jdbcType="INTEGER" />
    <result column="collect" property="collect" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="INTEGER" />
    <result column="ed" property="ed" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <!-- userex中已经扩展了用户等级，通过访问grade来获取用户的等级 -->
    <association property="user" javaType="com.moment.user.domain.UserEX">
    	<id column="user_id" property="id" jdbcType="INTEGER" />
    	<result column="sex" property="sex" jdbcType="VARCHAR" />
    	<result column="username" property="username" jdbcType="VARCHAR" />
    	<result column="account" property="account" jdbcType="VARCHAR" />
    	<result column="gradeid" property="gradeid" jdbcType="INTEGER" />
    	<result column="img" property="img" jdbcType="INTEGER" />
    	<result column="grade" property="grade.grade" jdbcType="INTEGER" />
    	<result column="user_name" property="username" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <!-- 查询所有图片 -->
   <select id="selectallpic" resultMap="EXUserResultMap">
   	select * from pp
  </select>
  
  <update id="updatepicstate" parameterType="Map">
  	update pic set
  	<if test="del!=null">
  	 state=1
  	</if>
  	<if test="ispublic!=null">
  	ispublic=#{ispublic}
  	</if>
  	where id in
  	<foreach collection="array" item="arr" index="no" open="("
			separator="," close=")">
			#{arr}
	</foreach>
  </update>
  <!-- 更新分类 -->
  <update id="upcategory" parameterType="Map">
  	update genre set
  	<if test="state!=null">
  	state=#{state}
  	</if>
  	where id in
  	<foreach collection="array" item="arr" index="no" open="("
			separator="," close=")">
			#{arr}
	</foreach>
  </update>
  <!-- 查询分类 -->
  <select id="selectcateByName" parameterType="String" resultType="int">
  	SELECT COUNT(*) FROM genre WHERE name=#{name}
  </select>
</mapper>